#!/bin/bash
# https://discuss.elastic.co/t/elasticsearch-7-17-7-does-not-start-java-security-accesscontrolexception-access-denied/318013/6
# https://raw.githubusercontent.com/bitnami/containers/main/bitnami/elasticsearch/docker-compose.yml
# https://github.com/bitnami/bitnami-docker-elasticsearch
# https://www.elastic.co/downloads/x-pack
# https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html

# Set to max mem 256GB
echo "vm.max_map_count=2097152" >> /etc/sysctl.conf
sysctl -p /etc/sysctl.conf

# Network
docker network create ek --attachable

# Docker Volumes
docker volume create elasticsearch

# docker-compose setup

mkdir $PWD/ek


ELASTIC_IMAGE='docker.elastic.co/elasticsearch/elasticsearch'
ELASTIC_VERSION='7.6.0'

IMAGE='es'
VERSION='latest'

export ELASTIC_IMAGE
export ELASTIC_VERSION
export IMAGE
export VERSION



cat << EOF > $PWD/ek/Dockerfile
FROM ${ELASTIC_IMAGE}:${ELASTIC_VERSION}
RUN yes | elasticsearch-plugin install discovery-ec2
RUN elasticsearch-plugin list
EOF



cat > $PWD/ek/docker-compose.yaml <<'EOF'
services:
  elasticsearch:
    build:
      context: .
      dockerfile: Dockerfile
    image: ${IMAGE}:${VERSION}
    container_name: elasticsearch
    restart: unless-stopped
    networks:
      - ek
    environment:
      - "node.name=elasticsearch"
      - "discovery.seed_hosts=elasticsearch"
      - "cluster.initial_master_nodes=elasticsearch"
      - "xpack.ml.enabled: false"
      - "cluster.name=docker-cluster"
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.monitoring.collection.enabled=false"
      - "xpack.security.enabled=true"
      - "logger.level=ERROR"
      - "ELASTIC_PASSWORD=cloudgeeks"
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 30
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      
      
  kibana:
    image: kibana:${ELASTIC_VERSION}
    restart: unless-stopped
    networks:
      - ek
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
volumes:
  elasticsearch:
networks:
  ek:
   external: true
EOF


docker compose -f ./ek/docker-compose.yaml -p ek up -d


# ENDPOINT='http://localhost:9200'

# export ENDPOINT

# curl -X GET "${ENDPOINT}/_cluster/health?pretty"

# curl -X GET "${ENDPOINT}/_cat"

# curl -X GET "${ENDPOINT}/_cat/nodes?v"

# curl -X GET "${ENDPOINT}/_cat/indices?v"


# End
